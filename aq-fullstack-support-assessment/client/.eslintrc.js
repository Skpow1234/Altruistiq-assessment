module.exports = {
  env: {
    node: true,
    es2021: true,
  },
  extends: ['plugin:vue/essential', 'airbnb-base', 'plugin:vue/recommended', 'plugin:vue/strongly-recommended', 'plugin:@typescript-eslint/recommended', 'plugin:storybook/recommended'],
  parser: 'vue-eslint-parser',
  parserOptions: {
    parser: '@typescript-eslint/parser',
    ecmaVersion: 'latest',
    sourceType: 'module',
  },
  globals: {
    Atomics: 'readonly',
    SharedArrayBuffer: 'readonly',
    window: true,
    Picker: true,
    Log: true,
    BrowserPolicy: true,
    it: true,
    describe: true,
    before: true,
    beforeEach: true,
    after: true,
    afterEach: true,
    require: true,
    WebApp: true,
    Assets: true,
    Cypress: true,
    cy: true,
    expect: true,
  },
  plugins: ['vue', '@typescript-eslint'],
  rules: {
    // Only allow debugger in development
    'no-debugger': process.env.PRE_COMMIT ? 'error' : 'off',
    // Only allow `console.log` in development
    'no-console': process.env.PRE_COMMIT ? ['error', {
      allow: ['warn', 'error'],
    }] : 'off',
    semi: 1,
    'import/no-absolute-path': 0,
    'import/no-unresolved': 0,
    'import/extensions': 0,
    'import/prefer-default-export': 0,
    'import/order': ['error', {
      'newlines-between': 'always-and-inside-groups',
    }],
    'func-names': 0,
    'no-await-in-loop': 0,
    'no-underscore-dangle': 0,
    'consistent-return': 0,
    'prefer-destructuring': 0,
    camelcase: 0,
    quotes: ['error', 'single'],
    'vue/array-bracket-spacing': 'error',
    'vue/arrow-spacing': 'error',
    'vue/block-spacing': 'error',
    'vue/brace-style': 'error',
    'vue/camelcase': 'error',
    'vue/attribute-hyphenation': 0,
    'vue/comma-dangle': ['error', {
      arrays: 'always-multiline',
      objects: 'always-multiline',
      imports: 'always-multiline',
      exports: 'always-multiline',
      functions: 'never',
    }],
    'vue/component-name-in-template-casing': 'error',
    'vue/dot-location': ['error', 'property'],
    'vue/eqeqeq': 'error',
    'vue/key-spacing': 'error',
    'vue/keyword-spacing': 'error',
    'vue/mustache-interpolation-spacing': 'error',
    'vue/no-deprecated-scope-attribute': 'error',
    'vue/no-empty-pattern': 'error',
    'vue/object-curly-spacing': ['error', 'always'],
    'vue/padding-line-between-blocks': 'error',
    'vue/space-infix-ops': 'error',
    'vue/space-unary-ops': 'error',
    'vue/v-on-function-call': 'error',
    'vue/v-slot-style': ['error', {
      atComponent: 'v-slot',
      default: 'v-slot',
      named: 'longform',
    }],
    'vue/script-indent': ['error', 2, {
      baseIndent: 1,
    }],
    'vue/html-indent': ['error', 2, {
      baseIndent: 1,
    }],
    'vue/valid-v-slot': 'error',
    // allow 'for (let x of n)'
    'no-restricted-syntax': [0, 'BinaryExpression[operator=\'of\']'],
    'comma-dangle': ['error', 'always-multiline'],
    'vue/multi-word-component-names': 0,
    'linebreak-style': ['error', 'unix'],
    'max-len': ['error', {
      code: 120,
      tabWidth: 2,
      ignoreStrings: true,
      ignoreTrailingComments: true,
      ignoreTemplateLiterals: true,
      ignoreUrls: true,
      ignorePattern: 'd="([\\s\\S]*?)"',
      ignoreRegExpLiterals: true,
      ignoreComments: true,
    }],
    'arrow-parens': ['error', 'as-needed'],
    'operator-linebreak': 0,
    'implicit-arrow-linebreak': 0,
    'no-promise-executor-return': 0,
    'semi-style': 0,
    'vue/no-multiple-template-root': 1,
    'no-unused-expressions': 0,
    'no-plusplus': 0,
    'vue/no-v-model-argument': 1,
    'vue/no-v-for-template-key': 0,
    'vue/no-v-for-template-key-on-child': 2,
    'vue/html-quotes': 0,
    'no-useless-escape': 1,
    'no-unused-vars': 'off',
    'vue/html-self-closing': 0,
    '@typescript-eslint/no-unused-vars': ['error', {
      argsIgnorePattern: '^_',
    }],
    'import/no-extraneous-dependencies': 0,
    'no-multiple-empty-lines': 0,
    'no-use-before-define': ['error', {
      variables: false,
    }],
  },
  overrides: [{
    files: ['*.vue'],
    rules: {
      // turn off indent to make sure it doesn't conflict with prettier
      indent: 'off',
    },
  }, {
    files: ['*.spec.js'],
    rules: {
      'no-unused-vars': 0,
    },
  }, {
    files: ['*.test.ts'],
    rules: {
      '@typescript-eslint/no-non-null-assertion': 0,
    },
  }, {
    files: ['*/**/store/*.js'],
    rules: {
      'no-param-reassign': 0,
    },
  }],
};
